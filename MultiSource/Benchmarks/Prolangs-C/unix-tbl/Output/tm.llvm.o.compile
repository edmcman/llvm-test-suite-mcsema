/home/ed/mcsema-testing/llvm-test-suite/MultiSource/Benchmarks/Prolangs-C/unix-tbl/tm.c:18:16: warning: using the result of an assignment as a condition without parentheses [-Wparentheses]
        for (ba= 0; c = *str; str++)
                    ~~^~~~~~
/home/ed/mcsema-testing/llvm-test-suite/MultiSource/Benchmarks/Prolangs-C/unix-tbl/tm.c:18:16: note: place parentheses around the assignment to silence this warning
        for (ba= 0; c = *str; str++)
                      ^
                    (       )
/home/ed/mcsema-testing/llvm-test-suite/MultiSource/Benchmarks/Prolangs-C/unix-tbl/tm.c:18:16: note: use '==' to turn this assignment into an equality comparison
        for (ba= 0; c = *str; str++)
                      ^
                      ==
/home/ed/mcsema-testing/llvm-test-suite/MultiSource/Benchmarks/Prolangs-C/unix-tbl/tm.c:27:12: warning: '&&' within '||' [-Wlogical-op-parentheses]
                                (str>p && digit(*(str-1)) ||
                                 ~~~~~~^~~~~~~~~~~~~~~~~~ ~~
/home/ed/mcsema-testing/llvm-test-suite/MultiSource/Benchmarks/Prolangs-C/unix-tbl/tm.c:27:12: note: place parentheses around the '&&' expression to silence this warning
                                (str>p && digit(*(str-1)) ||
                                       ^
                                 (                       )
/home/ed/mcsema-testing/llvm-test-suite/MultiSource/Benchmarks/Prolangs-C/unix-tbl/tm.c:39:19: warning: cast to 'char *' from smaller integer type 'int' [-Wint-to-pointer-cast]
                if (dpoint) str=(char *)dpoint;
                                ^
/home/ed/mcsema-testing/llvm-test-suite/MultiSource/Benchmarks/Prolangs-C/unix-tbl/tm.c:50:20: warning: using the result of an assignment as a condition without parentheses [-Wparentheses]
        while (*exstore++ = *str++);
               ~~~~~~~~~~~^~~~~~~~
/home/ed/mcsema-testing/llvm-test-suite/MultiSource/Benchmarks/Prolangs-C/unix-tbl/tm.c:50:20: note: place parentheses around the assignment to silence this warning
        while (*exstore++ = *str++);
                          ^
               (                  )
/home/ed/mcsema-testing/llvm-test-suite/MultiSource/Benchmarks/Prolangs-C/unix-tbl/tm.c:50:20: note: use '==' to turn this assignment into an equality comparison
        while (*exstore++ = *str++);
                          ^
                          ==
/home/ed/mcsema-testing/llvm-test-suite/MultiSource/Benchmarks/Prolangs-C/unix-tbl/tm.c:59:10: warning: using the result of an assignment as a condition without parentheses [-Wparentheses]
while (c = *p)
       ~~^~~~
/home/ed/mcsema-testing/llvm-test-suite/MultiSource/Benchmarks/Prolangs-C/unix-tbl/tm.c:59:10: note: place parentheses around the assignment to silence this warning
while (c = *p)
         ^
       (     )
/home/ed/mcsema-testing/llvm-test-suite/MultiSource/Benchmarks/Prolangs-C/unix-tbl/tm.c:59:10: note: use '==' to turn this assignment into an equality comparison
while (c = *p)
         ^
         ==
5 warnings generated.
exit 0
