/* translation of file(s)
	"/home/ed/mcsema-testing/llvm-test-suite/MultiSource/Applications/kimwitu++/inputs/f3.k"
	"/home/ed/mcsema-testing/llvm-test-suite/MultiSource/Applications/kimwitu++/inputs/f2.k"
	"/home/ed/mcsema-testing/llvm-test-suite/MultiSource/Applications/kimwitu++/inputs/f1.k"
 */
/* generated by:
 *  @(#)$Author: criswell $
 */
#define KC_UNPARSE

#include <stdio.h>
#include <string>
#include <stdlib.h>
#include "testk.h"
#include "testunpk.h"


namespace kc {
base_uview_class base_uview;
infix_class infix;
postfix_class postfix;

impl_uviews uviews[] = {
    {"base_uview",&base_uview},
    {"infix",&infix},
    {"postfix",&postfix},
    {0,0}
};

} // namespace kc

namespace kc {

#ifndef KC_TRACE_PROVIDED
#define KC_TRACE_PROVIDED(COND,FILE,LINE,NODE) COND
#endif

void
impl_abstract_phylum::unparse(printer_function opf, uview uv)
{
    printer_functor_function_wrapper pf(opf);
    do_unparse(pf, uv);
}

// Everything given as a pointer is expected to have an unparse-method (we
// believe it's a phylum), unless there's a specialisation for it

void
unparse(abstract_phylum kc_p, printer_functor kc_printer, uview kc_current_view)
{
    kc_p->unparse(kc_printer, kc_current_view);
}

void
unparse(void *kc_p, printer_functor kc_printer, uview kc_current_view)
{
    // MPi: 20020628 there shouldn't be any left
    assertionFailed("Unparse called for untyped pointer");
    // MPi: cast should be unnecessary, but there are still void*
    reinterpret_cast<impl_abstract_phylum*>(kc_p)->unparse(kc_printer, kc_current_view);
}

void
unparse(int kc_v, printer_functor kc_printer, uview kc_current_view)
{
    kc_char_t kc_string[200];
    kc_print_integer(kc_string, kc_v);
    kc_printer(kc_string, kc_current_view);
}

void
unparse(double kc_v, printer_functor kc_printer, uview kc_current_view)
{
    kc_char_t kc_string[200];
    kc_print_real(kc_string, kc_v);
    kc_printer(kc_string, kc_current_view);
}

void
unparse(kc_char_t *kc_v, printer_functor kc_printer, uview kc_current_view)
{
    kc_printer(kc_v, kc_current_view);
}

void
unparse(kc_string_t kc_v, printer_functor kc_printer, uview kc_current_view)
{
    kc_printer(kc_v.c_str(), kc_current_view);
}

#line  92 "testunpk.kcc"
void
impl_abstract_phylum::default_unparse(printer_functor kc_printer, uview kc_current_view)
{
    register int no_sons = operator_info[prod_sel()].no_sons;
    for (int i=0; i < no_sons; i++)
    subphylum(i)->unparse(kc_printer, kc_current_view);
}

void
impl_casestring__Str::do_unparse(printer_functor kc_printer, uview kc_current_view)
{
    kc::unparse(name, kc_printer, kc_current_view);
}

void
impl_nocasestring_NoCaseStr::do_unparse(printer_functor kc_printer, uview kc_current_view)
{
    kc::unparse(name, kc_printer, kc_current_view);
}

void
impl_integer__Int::do_unparse(printer_functor kc_printer, uview kc_current_view)
{
    kc::unparse(value, kc_printer, kc_current_view);
}

void
impl_real__Real::do_unparse(printer_functor kc_printer, uview kc_current_view)
{
    kc::unparse(value, kc_printer, kc_current_view);
}

void
impl_voidptr__VoidPtr::do_unparse(printer_functor kc_printer, uview kc_current_view)
{
    kc::unparse(pointer, kc_printer, kc_current_view);
}


#line  132 "testunpk.kcc"
void
impl_line_Line::do_unparse(printer_functor kc_printer, uview kc_current_view_base)
{
    switch(kc_current_view_base) {

#line  138 "testunpk.kcc"
	default:
	case base_uview_enum: {
	    uview kc_current_view=kc_current_view_base;
	    {
		default_unparse(kc_printer, kc_current_view );
	    }
	    break;
	}
    }
}


#line  151 "testunpk.kcc"
void
impl_term_Ident::do_unparse(printer_functor kc_printer, uview kc_current_view_base)
{
    switch(kc_current_view_base) {

#line  157 "testunpk.kcc"
	default:
	case base_uview_enum: {
	    uview kc_current_view=kc_current_view_base;
	    {
		default_unparse(kc_printer, kc_current_view );
	    }
	    break;
	}
    }
}


#line  170 "testunpk.kcc"
void
impl_term_Number::do_unparse(printer_functor kc_printer, uview kc_current_view_base)
{
    switch(kc_current_view_base) {

#line  176 "testunpk.kcc"
	default:
	case base_uview_enum: {
	    uview kc_current_view=kc_current_view_base;
	    {
		default_unparse(kc_printer, kc_current_view );
	    }
	    break;
	}
    }
}


#line  189 "testunpk.kcc"
void
impl_expression_Div2::do_unparse(printer_functor kc_printer, uview kc_current_view_base)
{
    switch(kc_current_view_base) {

#line  195 "testunpk.kcc"
	default:
	case base_uview_enum: {
	    uview kc_current_view=kc_current_view_base;
	    {
		default_unparse(kc_printer, kc_current_view );
	    }
	    break;
	}
    }
}


#line  208 "testunpk.kcc"
void
impl_expression_Div::do_unparse(printer_functor kc_printer, uview kc_current_view_base)
{
    switch(kc_current_view_base) {
	case postfix_enum: {
	    postfix_class& kc_current_view=static_cast<postfix_class&>(kc_current_view_base);
	    {
#line 54 "/home/ed/mcsema-testing/llvm-test-suite/MultiSource/Applications/kimwitu++/inputs/f3.k"
		const expression exp1 = this->expression_1;
#line 54 "/home/ed/mcsema-testing/llvm-test-suite/MultiSource/Applications/kimwitu++/inputs/f3.k"
		const expression exp2 = this->expression_2;
		kc::unparse(exp1, kc_printer, kc_current_view);
		{ kc_printer(kc_t(" "), kc_current_view); }
		kc::unparse(exp2, kc_printer, kc_current_view);
		{ kc_printer(kc_t(" /"), kc_current_view); }
	    }
	    break;
	}
	case infix_enum: {
	    infix_class& kc_current_view=static_cast<infix_class&>(kc_current_view_base);
	    if ((this->expression_1->prod_sel() == sel_Plus) && (this->expression_2->prod_sel() == sel_Plus)) {
#line 48 "/home/ed/mcsema-testing/llvm-test-suite/MultiSource/Applications/kimwitu++/inputs/f3.k"
		const expression exp1 = this->expression_1;
#line 48 "/home/ed/mcsema-testing/llvm-test-suite/MultiSource/Applications/kimwitu++/inputs/f3.k"
		const expression exp2 = this->expression_2;
		{ kc_printer(kc_t("("), kc_current_view); }
		kc::unparse(exp1, kc_printer, kc_current_view);
		{ kc_printer(kc_t(")/("), kc_current_view); }
		kc::unparse(exp2, kc_printer, kc_current_view);
		{ kc_printer(kc_t(")"), kc_current_view); }
	    } else
		if ((this->expression_1->prod_sel() == sel_Plus) && (this->expression_2->prod_sel() == sel_Minus)) {
#line 49 "/home/ed/mcsema-testing/llvm-test-suite/MultiSource/Applications/kimwitu++/inputs/f3.k"
		const expression exp1 = this->expression_1;
#line 49 "/home/ed/mcsema-testing/llvm-test-suite/MultiSource/Applications/kimwitu++/inputs/f3.k"
		const expression exp2 = this->expression_2;
		{ kc_printer(kc_t("("), kc_current_view); }
		kc::unparse(exp1, kc_printer, kc_current_view);
		{ kc_printer(kc_t(")/("), kc_current_view); }
		kc::unparse(exp2, kc_printer, kc_current_view);
		{ kc_printer(kc_t(")"), kc_current_view); }
	    } else
		if ((this->expression_1->prod_sel() == sel_Minus) && (this->expression_2->prod_sel() == sel_Plus)) {
#line 50 "/home/ed/mcsema-testing/llvm-test-suite/MultiSource/Applications/kimwitu++/inputs/f3.k"
		const expression exp1 = this->expression_1;
#line 50 "/home/ed/mcsema-testing/llvm-test-suite/MultiSource/Applications/kimwitu++/inputs/f3.k"
		const expression exp2 = this->expression_2;
		{ kc_printer(kc_t("("), kc_current_view); }
		kc::unparse(exp1, kc_printer, kc_current_view);
		{ kc_printer(kc_t(")/("), kc_current_view); }
		kc::unparse(exp2, kc_printer, kc_current_view);
		{ kc_printer(kc_t(")"), kc_current_view); }
	    } else
		if ((this->expression_1->prod_sel() == sel_Minus) && (this->expression_2->prod_sel() == sel_Minus)) {
#line 51 "/home/ed/mcsema-testing/llvm-test-suite/MultiSource/Applications/kimwitu++/inputs/f3.k"
		const expression exp1 = this->expression_1;
#line 51 "/home/ed/mcsema-testing/llvm-test-suite/MultiSource/Applications/kimwitu++/inputs/f3.k"
		const expression exp2 = this->expression_2;
		{ kc_printer(kc_t("("), kc_current_view); }
		kc::unparse(exp1, kc_printer, kc_current_view);
		{ kc_printer(kc_t(")/("), kc_current_view); }
		kc::unparse(exp2, kc_printer, kc_current_view);
		{ kc_printer(kc_t(")"), kc_current_view); }
	    } else
		if ((this->expression_1->prod_sel() == sel_Plus)) {
#line 38 "/home/ed/mcsema-testing/llvm-test-suite/MultiSource/Applications/kimwitu++/inputs/f3.k"
		const expression exp1 = this->expression_1;
#line 38 "/home/ed/mcsema-testing/llvm-test-suite/MultiSource/Applications/kimwitu++/inputs/f3.k"
		const expression exp2 = this->expression_2;
		{ kc_printer(kc_t("("), kc_current_view); }
		kc::unparse(exp1, kc_printer, kc_current_view);
		{ kc_printer(kc_t(")/"), kc_current_view); }
		kc::unparse(exp2, kc_printer, kc_current_view);
	    } else
		if ((this->expression_1->prod_sel() == sel_Minus)) {
#line 39 "/home/ed/mcsema-testing/llvm-test-suite/MultiSource/Applications/kimwitu++/inputs/f3.k"
		const expression exp1 = this->expression_1;
#line 39 "/home/ed/mcsema-testing/llvm-test-suite/MultiSource/Applications/kimwitu++/inputs/f3.k"
		const expression exp2 = this->expression_2;
		{ kc_printer(kc_t("("), kc_current_view); }
		kc::unparse(exp1, kc_printer, kc_current_view);
		{ kc_printer(kc_t(")/"), kc_current_view); }
		kc::unparse(exp2, kc_printer, kc_current_view);
	    } else
		if ((this->expression_2->prod_sel() == sel_Plus)) {
#line 42 "/home/ed/mcsema-testing/llvm-test-suite/MultiSource/Applications/kimwitu++/inputs/f3.k"
		const expression exp1 = this->expression_1;
#line 42 "/home/ed/mcsema-testing/llvm-test-suite/MultiSource/Applications/kimwitu++/inputs/f3.k"
		const expression exp2 = this->expression_2;
		kc::unparse(exp1, kc_printer, kc_current_view);
		{ kc_printer(kc_t("/("), kc_current_view); }
		kc::unparse(exp2, kc_printer, kc_current_view);
		{ kc_printer(kc_t(")"), kc_current_view); }
	    } else
		if ((this->expression_2->prod_sel() == sel_Minus)) {
#line 43 "/home/ed/mcsema-testing/llvm-test-suite/MultiSource/Applications/kimwitu++/inputs/f3.k"
		const expression exp1 = this->expression_1;
#line 43 "/home/ed/mcsema-testing/llvm-test-suite/MultiSource/Applications/kimwitu++/inputs/f3.k"
		const expression exp2 = this->expression_2;
		kc::unparse(exp1, kc_printer, kc_current_view);
		{ kc_printer(kc_t("/("), kc_current_view); }
		kc::unparse(exp2, kc_printer, kc_current_view);
		{ kc_printer(kc_t(")"), kc_current_view); }
	    } else
		if ((this->expression_2->prod_sel() == sel_Mul)) {
#line 44 "/home/ed/mcsema-testing/llvm-test-suite/MultiSource/Applications/kimwitu++/inputs/f3.k"
		const expression exp1 = this->expression_1;
#line 44 "/home/ed/mcsema-testing/llvm-test-suite/MultiSource/Applications/kimwitu++/inputs/f3.k"
		const expression exp2 = this->expression_2;
		kc::unparse(exp1, kc_printer, kc_current_view);
		{ kc_printer(kc_t("/("), kc_current_view); }
		kc::unparse(exp2, kc_printer, kc_current_view);
		{ kc_printer(kc_t(")"), kc_current_view); }
	    } else
		if ((this->expression_2->prod_sel() == sel_Div)) {
#line 45 "/home/ed/mcsema-testing/llvm-test-suite/MultiSource/Applications/kimwitu++/inputs/f3.k"
		const expression exp1 = this->expression_1;
#line 45 "/home/ed/mcsema-testing/llvm-test-suite/MultiSource/Applications/kimwitu++/inputs/f3.k"
		const expression exp2 = this->expression_2;
		kc::unparse(exp1, kc_printer, kc_current_view);
		{ kc_printer(kc_t("/("), kc_current_view); }
		kc::unparse(exp2, kc_printer, kc_current_view);
		{ kc_printer(kc_t(")"), kc_current_view); }
	    } else
	    {
#line 54 "/home/ed/mcsema-testing/llvm-test-suite/MultiSource/Applications/kimwitu++/inputs/f3.k"
		const expression exp1 = this->expression_1;
#line 54 "/home/ed/mcsema-testing/llvm-test-suite/MultiSource/Applications/kimwitu++/inputs/f3.k"
		const expression exp2 = this->expression_2;
		kc::unparse(exp1, kc_printer, kc_current_view);
		{ kc_printer(kc_t("/"), kc_current_view); }
		kc::unparse(exp2, kc_printer, kc_current_view);
	    }
	    break;
	}

#line  345 "testunpk.kcc"
	default:
	case base_uview_enum: {
	    uview kc_current_view=kc_current_view_base;
	    {
		default_unparse(kc_printer, kc_current_view );
	    }
	    break;
	}
    }
}


#line  358 "testunpk.kcc"
void
impl_expression_Minus::do_unparse(printer_functor kc_printer, uview kc_current_view_base)
{
    switch(kc_current_view_base) {
	case postfix_enum: {
	    postfix_class& kc_current_view=static_cast<postfix_class&>(kc_current_view_base);
	    {
#line 15 "/home/ed/mcsema-testing/llvm-test-suite/MultiSource/Applications/kimwitu++/inputs/f3.k"
		const expression exp1 = this->expression_1;
#line 15 "/home/ed/mcsema-testing/llvm-test-suite/MultiSource/Applications/kimwitu++/inputs/f3.k"
		const expression exp2 = this->expression_2;
		kc::unparse(exp1, kc_printer, kc_current_view);
		{ kc_printer(kc_t(" "), kc_current_view); }
		kc::unparse(exp2, kc_printer, kc_current_view);
		{ kc_printer(kc_t(" -"), kc_current_view); }
	    }
	    break;
	}
	case infix_enum: {
	    infix_class& kc_current_view=static_cast<infix_class&>(kc_current_view_base);
	    {
#line 15 "/home/ed/mcsema-testing/llvm-test-suite/MultiSource/Applications/kimwitu++/inputs/f3.k"
		const expression exp1 = this->expression_1;
#line 15 "/home/ed/mcsema-testing/llvm-test-suite/MultiSource/Applications/kimwitu++/inputs/f3.k"
		const expression exp2 = this->expression_2;
		kc::unparse(exp1, kc_printer, kc_current_view);
		{ kc_printer(kc_t("-"), kc_current_view); }
		kc::unparse(exp2, kc_printer, kc_current_view);
	    }
	    break;
	}

#line  391 "testunpk.kcc"
	default:
	case base_uview_enum: {
	    uview kc_current_view=kc_current_view_base;
	    {
		default_unparse(kc_printer, kc_current_view );
	    }
	    break;
	}
    }
}


#line  404 "testunpk.kcc"
void
impl_expression_Mul::do_unparse(printer_functor kc_printer, uview kc_current_view_base)
{
    switch(kc_current_view_base) {
	case postfix_enum: {
	    postfix_class& kc_current_view=static_cast<postfix_class&>(kc_current_view_base);
	    {
#line 34 "/home/ed/mcsema-testing/llvm-test-suite/MultiSource/Applications/kimwitu++/inputs/f3.k"
		const expression exp1 = this->expression_1;
#line 34 "/home/ed/mcsema-testing/llvm-test-suite/MultiSource/Applications/kimwitu++/inputs/f3.k"
		const expression exp2 = this->expression_2;
		kc::unparse(exp1, kc_printer, kc_current_view);
		{ kc_printer(kc_t(" "), kc_current_view); }
		kc::unparse(exp2, kc_printer, kc_current_view);
		{ kc_printer(kc_t(" *"), kc_current_view); }
	    }
	    break;
	}
	case infix_enum: {
	    infix_class& kc_current_view=static_cast<infix_class&>(kc_current_view_base);
	    if ((this->expression_1->prod_sel() == sel_Plus) && (this->expression_2->prod_sel() == sel_Plus)) {
#line 28 "/home/ed/mcsema-testing/llvm-test-suite/MultiSource/Applications/kimwitu++/inputs/f3.k"
		const expression exp1 = this->expression_1;
#line 28 "/home/ed/mcsema-testing/llvm-test-suite/MultiSource/Applications/kimwitu++/inputs/f3.k"
		const expression exp2 = this->expression_2;
		{ kc_printer(kc_t("("), kc_current_view); }
		kc::unparse(exp1, kc_printer, kc_current_view);
		{ kc_printer(kc_t(")*("), kc_current_view); }
		kc::unparse(exp2, kc_printer, kc_current_view);
		{ kc_printer(kc_t(")"), kc_current_view); }
	    } else
		if ((this->expression_1->prod_sel() == sel_Plus) && (this->expression_2->prod_sel() == sel_Minus)) {
#line 29 "/home/ed/mcsema-testing/llvm-test-suite/MultiSource/Applications/kimwitu++/inputs/f3.k"
		const expression exp1 = this->expression_1;
#line 29 "/home/ed/mcsema-testing/llvm-test-suite/MultiSource/Applications/kimwitu++/inputs/f3.k"
		const expression exp2 = this->expression_2;
		{ kc_printer(kc_t("("), kc_current_view); }
		kc::unparse(exp1, kc_printer, kc_current_view);
		{ kc_printer(kc_t(")*("), kc_current_view); }
		kc::unparse(exp2, kc_printer, kc_current_view);
		{ kc_printer(kc_t(")"), kc_current_view); }
	    } else
		if ((this->expression_1->prod_sel() == sel_Minus) && (this->expression_2->prod_sel() == sel_Plus)) {
#line 30 "/home/ed/mcsema-testing/llvm-test-suite/MultiSource/Applications/kimwitu++/inputs/f3.k"
		const expression exp1 = this->expression_1;
#line 30 "/home/ed/mcsema-testing/llvm-test-suite/MultiSource/Applications/kimwitu++/inputs/f3.k"
		const expression exp2 = this->expression_2;
		{ kc_printer(kc_t("("), kc_current_view); }
		kc::unparse(exp1, kc_printer, kc_current_view);
		{ kc_printer(kc_t(")*("), kc_current_view); }
		kc::unparse(exp2, kc_printer, kc_current_view);
		{ kc_printer(kc_t(")"), kc_current_view); }
	    } else
		if ((this->expression_1->prod_sel() == sel_Minus) && (this->expression_2->prod_sel() == sel_Minus)) {
#line 31 "/home/ed/mcsema-testing/llvm-test-suite/MultiSource/Applications/kimwitu++/inputs/f3.k"
		const expression exp1 = this->expression_1;
#line 31 "/home/ed/mcsema-testing/llvm-test-suite/MultiSource/Applications/kimwitu++/inputs/f3.k"
		const expression exp2 = this->expression_2;
		{ kc_printer(kc_t("("), kc_current_view); }
		kc::unparse(exp1, kc_printer, kc_current_view);
		{ kc_printer(kc_t(")*("), kc_current_view); }
		kc::unparse(exp2, kc_printer, kc_current_view);
		{ kc_printer(kc_t(")"), kc_current_view); }
	    } else
		if ((this->expression_1->prod_sel() == sel_Plus)) {
#line 24 "/home/ed/mcsema-testing/llvm-test-suite/MultiSource/Applications/kimwitu++/inputs/f3.k"
		const expression exp1 = this->expression_1;
#line 24 "/home/ed/mcsema-testing/llvm-test-suite/MultiSource/Applications/kimwitu++/inputs/f3.k"
		const expression exp2 = this->expression_2;
		{ kc_printer(kc_t("("), kc_current_view); }
		kc::unparse(exp1, kc_printer, kc_current_view);
		{ kc_printer(kc_t(")*"), kc_current_view); }
		kc::unparse(exp2, kc_printer, kc_current_view);
	    } else
		if ((this->expression_1->prod_sel() == sel_Minus)) {
#line 25 "/home/ed/mcsema-testing/llvm-test-suite/MultiSource/Applications/kimwitu++/inputs/f3.k"
		const expression exp1 = this->expression_1;
#line 25 "/home/ed/mcsema-testing/llvm-test-suite/MultiSource/Applications/kimwitu++/inputs/f3.k"
		const expression exp2 = this->expression_2;
		{ kc_printer(kc_t("("), kc_current_view); }
		kc::unparse(exp1, kc_printer, kc_current_view);
		{ kc_printer(kc_t(")*"), kc_current_view); }
		kc::unparse(exp2, kc_printer, kc_current_view);
	    } else
		if ((this->expression_2->prod_sel() == sel_Plus)) {
#line 20 "/home/ed/mcsema-testing/llvm-test-suite/MultiSource/Applications/kimwitu++/inputs/f3.k"
		const expression exp1 = this->expression_1;
#line 20 "/home/ed/mcsema-testing/llvm-test-suite/MultiSource/Applications/kimwitu++/inputs/f3.k"
		const expression exp2 = this->expression_2;
		kc::unparse(exp1, kc_printer, kc_current_view);
		{ kc_printer(kc_t("*("), kc_current_view); }
		kc::unparse(exp2, kc_printer, kc_current_view);
		{ kc_printer(kc_t(")"), kc_current_view); }
	    } else
		if ((this->expression_2->prod_sel() == sel_Minus)) {
#line 21 "/home/ed/mcsema-testing/llvm-test-suite/MultiSource/Applications/kimwitu++/inputs/f3.k"
		const expression exp1 = this->expression_1;
#line 21 "/home/ed/mcsema-testing/llvm-test-suite/MultiSource/Applications/kimwitu++/inputs/f3.k"
		const expression exp2 = this->expression_2;
		kc::unparse(exp1, kc_printer, kc_current_view);
		{ kc_printer(kc_t("*("), kc_current_view); }
		kc::unparse(exp2, kc_printer, kc_current_view);
		{ kc_printer(kc_t(")"), kc_current_view); }
	    } else
	    {
#line 34 "/home/ed/mcsema-testing/llvm-test-suite/MultiSource/Applications/kimwitu++/inputs/f3.k"
		const expression exp1 = this->expression_1;
#line 34 "/home/ed/mcsema-testing/llvm-test-suite/MultiSource/Applications/kimwitu++/inputs/f3.k"
		const expression exp2 = this->expression_2;
		kc::unparse(exp1, kc_printer, kc_current_view);
		{ kc_printer(kc_t("*"), kc_current_view); }
		kc::unparse(exp2, kc_printer, kc_current_view);
	    }
	    break;
	}

#line  521 "testunpk.kcc"
	default:
	case base_uview_enum: {
	    uview kc_current_view=kc_current_view_base;
	    {
		default_unparse(kc_printer, kc_current_view );
	    }
	    break;
	}
    }
}


#line  534 "testunpk.kcc"
void
impl_expression_Plus::do_unparse(printer_functor kc_printer, uview kc_current_view_base)
{
    switch(kc_current_view_base) {
	case postfix_enum: {
	    postfix_class& kc_current_view=static_cast<postfix_class&>(kc_current_view_base);
	    {
#line 11 "/home/ed/mcsema-testing/llvm-test-suite/MultiSource/Applications/kimwitu++/inputs/f3.k"
		const expression exp1 = this->expression_1;
#line 11 "/home/ed/mcsema-testing/llvm-test-suite/MultiSource/Applications/kimwitu++/inputs/f3.k"
		const expression exp2 = this->expression_2;
		kc::unparse(exp1, kc_printer, kc_current_view);
		{ kc_printer(kc_t(" "), kc_current_view); }
		kc::unparse(exp2, kc_printer, kc_current_view);
		{ kc_printer(kc_t(" +"), kc_current_view); }
	    }
	    break;
	}
	case infix_enum: {
	    infix_class& kc_current_view=static_cast<infix_class&>(kc_current_view_base);
	    {
#line 11 "/home/ed/mcsema-testing/llvm-test-suite/MultiSource/Applications/kimwitu++/inputs/f3.k"
		const expression exp1 = this->expression_1;
#line 11 "/home/ed/mcsema-testing/llvm-test-suite/MultiSource/Applications/kimwitu++/inputs/f3.k"
		const expression exp2 = this->expression_2;
		kc::unparse(exp1, kc_printer, kc_current_view);
		{ kc_printer(kc_t("+"), kc_current_view); }
		kc::unparse(exp2, kc_printer, kc_current_view);
	    }
	    break;
	}

#line  567 "testunpk.kcc"
	default:
	case base_uview_enum: {
	    uview kc_current_view=kc_current_view_base;
	    {
		default_unparse(kc_printer, kc_current_view );
	    }
	    break;
	}
    }
}


#line  580 "testunpk.kcc"
void
impl_expression_Term::do_unparse(printer_functor kc_printer, uview kc_current_view_base)
{
    switch(kc_current_view_base) {

#line  586 "testunpk.kcc"
	default:
	case base_uview_enum: {
	    uview kc_current_view=kc_current_view_base;
	    {
		default_unparse(kc_printer, kc_current_view );
	    }
	    break;
	}
    }
}


} // namespace kc
